#include <dt-bindings/zmk/mouse.h>
#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/*

   &mmv_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

   &msc_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

 */

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

&mt {
    tapping-term-ms = <200>;
    quick-tap-ms = <175>;
    flavor = "balanced";
    hold-trigger-key-positions = <16 17 18 13 12 11 20>;
    hold-trigger-on-release;
};

&mmv {
};

&msc {
};

&lt {
};

/ {
    behaviors {
        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <900>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <1>;      // 0
            time-to-max-speed-ms = <400>;      // 500
            delay-ms = <0>;                   //   10
        };
    };

    combos {
        compatible = "zmk,combos";

        a {
            bindings = <&mt GRAVE ESCAPE>;
            key-positions = <1 2>;
            layers = <1 0 3>;
        };

        b {
            bindings = <&kp CLCK>;
            key-positions = <13 14 15>;
        };

        d {
            bindings = <&kp DEL>;
            key-positions = <9 10>;
        };

        e {
            bindings = <&kp ENTER>;
            key-positions = <20 21>;
        };

        h {
            bindings = <&sys_reset>;
            key-positions = <1 14 27>;
        };

        j {
            bindings = <&sys_reset>;
            key-positions = <10 21 32>;
        };

        Backslash_pipe {
            bindings = <&mt PIPE BACKSLASH>;
            key-positions = <33 34>;
        };

        print_screen {
            bindings = <&screenshot>;
            key-positions = <25 26 27>;
        };

        num_layer {
            bindings = <&to 3>;
            key-positions = <6 7 8>;
        };

        bt_layer {
            bindings = <&to 6>;
            key-positions = <3 4 5>;
        };

        default_layer {
            bindings = <&to 0>;
            key-positions = <18 19 20 21>;
        };

        f_layer {
            bindings = <&to 5>;
            key-positions = <14 15 16 17>;
        };

        colemak_dh {
            bindings = <&tog 1>;
            key-positions = <34 22>;
        };

        Tilde {
            bindings = <&mt LS(GRAVE) GRAVE>;
            key-positions = <1 2>;
            layers = <2>;
        };
    };

    macros {
        screenshot: screenshot {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LS(LEFT_GUI)>,
                <&macro_tap>,
                <&kp S>,
                <&macro_release>,
                <&kp LS(LEFT_GUI)>;

            label = "SCREENSHOT";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        colemak_dh {
            bindings = <
&none  &kp Q           &kp W             &kp F          &kp P           &kp B          &kp J        &kp L            &kp U            &kp Y              &mt COLON SEMI      &none
&none  &kp A           &mt LEFT_SHIFT R  &mt LCTRL S    &mt LEFT_ALT T  &kp G          &kp M        &mt RIGHT_ALT N  &mt RCTRL E      &mt RIGHT_SHIFT I  &kp O               &none
&none  &mt LEFT_WIN Z  &kp X             &kp C          &kp D           &kp V          &kp K        &kp H            &kp COMMA        &kp DOT            &mt QUESTION SLASH  &none
                                         &lt 3 LG(TAB)  &lt 4 TAB       &lt 2 SPACE    &lt 2 SPACE  &kp BACKSPACE    &mt LC(V) LC(C)
            >;

            label = "colemak_dh";
        };

        qwerty_layer {
            label = "0";
            bindings = <
&none  &kp Q           &kp W             &kp E          &kp R           &kp T          &kp Y        &kp U            &kp I            &kp O              &kp P                &none
&none  &kp A           &mt LEFT_SHIFT S  &mt LCTRL D    &mt LEFT_ALT F  &kp G          &kp H        &mt RIGHT_ALT J  &mt RCTRL K      &mt RIGHT_SHIFT L  &mt COLON SEMICOLON  &none
&none  &mt LEFT_GUI Z  &kp X             &kp C          &kp V           &kp B          &kp N        &kp M            &kp COMMA        &kp DOT            &mt QUESTION SLASH   &none
                                         &lt 3 LG(TAB)  &lt 4 TAB       &lt 2 SPACE    &lt 0 SPACE  &kp BACKSPACE    &mt LC(V) LC(C)
            >;
        };

        arrow_numbers {
            label = "1";
            bindings = <
&none  &mt EXCLAMATION NUMBER_1     &mt AT_SIGN NUMBER_2           &mt HASH NUMBER_3  &mt DOLLAR NUMBER_4  &mt PERCENT NUMBER_5    &mt CARET NUMBER_6  &mt AMPERSAND NUMBER_7  &mt ASTERISK NUMBER_8  &mt LEFT_PARENTHESIS NUMBER_9  &mt RIGHT_PARENTHESIS NUMBER_0  &none
&none  &mt UNDERSCORE MINUS         &mt PLUS EQUAL                 &none              &none                &none                   &none               &kp PAGE_UP             &kp UP_ARROW           &kp PAGE_DOWN                  &mt DOUBLE_QUOTES SQT           &none
&none  &mt LEFT_BRACE LEFT_BRACKET  &mt RIGHT_BRACE RIGHT_BRACKET  &none              &none                &none                   &kp HOME            &kp LEFT_ARROW          &kp DOWN               &kp RIGHT_ARROW                &kp END                         &none
                                                                   &none              &none                &none                   &kp C_PREV          &kp C_NEXT              &kp C_PLAY_PAUSE
            >;
        };

        number_layer {
            label = "3";
            bindings = <
&none  &none        &none  &none  &none  &none    &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_DIVIDE    &kp KP_MULTIPLY  &none
&none  &none        &none  &none  &none  &none    &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_SUBTRACT  &kp PLUS         &none
&none  &bootloader  &none  &none  &none  &none    &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_COMMA     &kp KP_EQUAL     &none
                           &none  &none  &none    &kp KP_NUMBER_0  &kp PERIOD       &kp KP_ENTER
            >;
        };

        mouse_layer {
            label = "4";
            bindings = <
&none  &none           &kp C_AC_BACK  &kp C_AC_REFRESH  &kp C_AC_FORWARD  &none             &none         &none           &mmv MOVE_UP    &none            &none  &none
&none  &kp LCTRL       &mkp LCLK      &mkp MCLK         &mkp RCLK         &msc SCRL_UP      &none         &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &none  &none
&none  &kp LEFT_SHIFT  &none          &msc SCRL_LEFT    &msc SCRL_RIGHT   &msc SCRL_DOWN    &none         &none           &none           &none            &none  &none
                                      &none             &none             &none             &kp C_VOL_DN  &kp C_VOL_UP    &kp K_MUTE
            >;
        };

        f_layer {
            label = "5";
            bindings = <
&none  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5    &kp F6   &kp F7   &kp F8  &kp F9  &kp F10  &none
&none  &trans  &trans  &trans  &trans  &trans    &kp F11  &kp F12  &trans  &trans  &trans   &none
&none  &trans  &trans  &trans  &trans  &trans    &trans   &trans   &trans  &trans  &trans   &none
                       &trans  &trans  &trans    &trans   &trans   &trans
            >;
        };

        bt_layer {
            label = "6";
            bindings = <
&trans  &bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &trans  &trans  &trans  &trans       &trans
&trans  &trans          &trans        &trans        &trans        &trans          &trans  &trans  &trans  &trans  &trans       &trans
&trans  &bt BT_CLR_ALL  &bt BT_CLR    &trans        &bt BT_PRV    &bt BT_NXT      &trans  &trans  &trans  &trans  &bootloader  &trans
                                      &trans        &trans        &trans          &trans  &trans  &trans
            >;
        };
    };
};
